#BlueJ class context
comment0.target=DLCList
comment0.text=\r\n\ Write\ a\ description\ of\ class\ DLCList\ here.\r\n\r\n\ @author\ (your\ name)\r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=
comment1.target=DLCList()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ DLCList\r\n
comment10.params=data
comment10.target=boolean\ contains(java.lang.Object)
comment10.text=n\r\n\ Check\ if\ the\ list\ contains\ a\ specific\ data\ type.\r\n\ @return\ true\ if\ it\ contains\ the\ same\ datatype\ thrown\ in\ the\ parameter.\r\n
comment11.params=index
comment11.target=java.lang.Object\ get(int)
comment11.text=\r\n\ Get\ the\ instance's\ reference\ stored\ at\ the\ specified\ index.\r\n\ @param\ index\ to\ get\ the\ object\ at.\r\n\ @return\ the\ data\ at\ that\ parameter.\r\n
comment12.params=
comment12.target=java.lang.Object\ getFirst()
comment12.text=\r\n\ Get\ the\ first\ item\ in\ the\ list.\r\n\ @return\ the\ first\ item\ stored\ in\ the\ list\ (the\ reference).\r\n
comment13.params=
comment13.target=java.lang.Object\ getLast()
comment13.text=\r\n\ Get\ the\ last\ item\ in\ the\ list.\r\n\ @return\ the\ last\ item\ stored\ in\ the\ list\ (the\ reference).\r\n
comment14.params=index\ data
comment14.target=void\ set(int,\ java.lang.Object)
comment14.text=\r\n\ Set\ the\ specified\ index\ to\ a\ specified\ object.\r\n\ @param\ index\ to\ send\ the\ object.\r\n\ @param\ object\ to\ store\ at\ the\ specified\ index.\r\n
comment15.params=index\ data
comment15.target=void\ insert(int,\ java.lang.Object)
comment15.text=\r\n\ Insert\ an\ object\ into\ a\ specified\ index,\ will\ not\ overwrite\ the\ current\ object\ at\ this\ index.\r\n\ @param\ index\ to\ insert\ object.\r\n\ @param\ object\ to\ put\ in\ the\ list.\r\n
comment16.params=index
comment16.target=Node\ getNodeAt(int)
comment16.text=\r\n\ Get\ the\ node\ at\ the\ "index"\r\n\ @param\ amount\ of\ times\ to\ loop.\r\n\ @return\ the\ node\ at\ the\ specified\ index.\r\n
comment17.params=listToAdd
comment17.target=void\ addAll(java.util.List)
comment17.text=\r\n\ Quickly\ add\ an\ entire\ list\ to\ the\ DLCList.\r\n\ Primariliy\ for\ testing\ (hence\ usage\ of\ List)\r\n
comment18.params=
comment18.target=java.lang.String\ toString()
comment2.params=type
comment2.target=boolean\ add(java.lang.Object)
comment2.text=\r\n\ Add\ new\ element\ to\ the\ end\ of\ a\ list.\r\n\ @param\ Type\ to\ add\ to\ the\ list\r\n
comment3.params=type
comment3.target=boolean\ addFirst(java.lang.Object)
comment3.text=\r\n\ Add\ an\ element\ to\ the\ front\ of\ a\ list.\r\n\ @param\ type\ of\ element\ to\ add\ in.\r\n
comment4.params=type
comment4.target=boolean\ addLast(java.lang.Object)
comment5.params=index
comment5.target=void\ delete(int)
comment5.text=\r\n\ Delete\ the\ object\ at\ the\ index.\r\n\ @param\ index\ to\ be\ deleted.\r\n
comment6.params=
comment6.target=void\ deleteFirst()
comment6.text=\r\n\ Delete\ the\ first\ item\ in\ the\ DLCList.\r\n
comment7.params=
comment7.target=void\ deleteLast()
comment7.text=\r\n\ Delete\ the\ last\ item\ in\ the\ DLCList.\r\n
comment8.params=
comment8.target=int\ size()
comment8.text=\r\n\ Returns\ the\ size\ of\ the\ DLCList.\r\n
comment9.params=
comment9.target=void\ clear()
comment9.text=\r\n\ Clear\ the\ entire\ DLCList.\ removes\ nodes\ and\ data.\ Potentially\ inefficient\r\n
numComments=19
